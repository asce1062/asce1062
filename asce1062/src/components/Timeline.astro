---
const { timeline, sections } = Astro.props;
import type { TimelineEntry, TimelineSection } from "@/types";
---

{
	sections ? (
		<div>
			{sections.map((section: TimelineSection) => (
				<div class="mb-8">
					<h1 class="font-bold mb-4 text-gray-900 dark:text-white underline decoration-4">{section.sectionTitle}</h1>
					<ol class="relative border-s border-palette-900 dark:border-light-100">
						{section.entries.map((data: TimelineEntry) => (
							<li class="mb-10 ms-4">
								<div class="absolute w-3 h-3 rounded-full mt-1.5 -start-1.5 border border-palette-900 bg-light-100 dark:border-light-100 dark:bg-palette-900" />
								<time class="mb-1 text-xs font-normal leading-none text-light-50 dark:text-palette-300">
									{data.date}
								</time>
								<h4 class="font-semibold text-gray-900 dark:text-white">{data.title}</h4>
								{data.descriptions.map((description: string) => (
									<p class="mb-4 font-normal text-gray-500 dark:text-gray-400 text-sm">{description}</p>
								))}
								{data.moreInformation && (
									<a
										href={data.moreInformation}
										target="_blank"
										rel="noopener noreferrer"
										class="no-underline mb-1 inline-flex items-center px-4 py-2 text-xs font-normal text-gray-900 bg-white border border-gray-200 rounded-lg dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:focus:ring-gray-700 hover:underline hover:decoration-wavy text-light-50 dark:text-palette-300">
										Learn more
										<svg
											class="w-3 h-3 ms-2 rtl:rotate-180"
											aria-hidden="true"
											xmlns="http://www.w3.org/2000/svg"
											fill="none"
											viewBox="0 0 14 10">
											<path
												stroke="currentColor"
												stroke-linecap="round"
												stroke-linejoin="round"
												stroke-width="2"
												d="M1 5h12m0 0L9 1m4 4L9 9"
											/>
										</svg>
									</a>
								)}
							</li>
						))}
					</ol>
				</div>
			))}
		</div>
	) : (
		<ol class="relative border-s border-palette-900 dark:border-light-100">
			{timeline.map((data: TimelineEntry) => (
				<li class="mb-10 ms-4">
					<div class="absolute w-3 h-3 rounded-full mt-1.5 -start-1.5 border border-palette-900 bg-light-100 dark:border-light-100 dark:bg-palette-900" />
					<time class="mb-1 text-xs font-normal leading-none text-light-50 dark:text-palette-300">{data.date}</time>
					<h4 class="font-semibold text-gray-900 dark:text-white">{data.title}</h4>
					{data.descriptions.map((description: string) => (
						<p class="mb-4 font-normal text-gray-500 dark:text-gray-400 text-sm">{description}</p>
					))}
					{data.moreInformation && (
						<a
							href={data.moreInformation}
							target="_blank"
							rel="noopener noreferrer"
							class="no-underline mb-1 inline-flex items-center px-4 py-2 text-xs font-normal text-gray-900 bg-white border border-gray-200 rounded-lg dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:focus:ring-gray-700 hover:underline hover:decoration-wavy text-light-50 dark:text-palette-300">
							Learn more
							<svg
								class="w-3 h-3 ms-2 rtl:rotate-180"
								aria-hidden="true"
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 14 10">
								<path
									stroke="currentColor"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M1 5h12m0 0L9 1m4 4L9 9"
								/>
							</svg>
						</a>
					)}
				</li>
			))}
		</ol>
	)
}
