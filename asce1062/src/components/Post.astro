---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
	name: string;
	url: string;
	image: string;
	description: string;
	date: string;
	tags: string[];
	readingTime?: string;
}

const { name, url, image, description, date, tags, readingTime } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/**/*.{jpeg,jpg,png,gif}");
---

<div
	class="relative flex flex-col md:flex-row overflow-auto rounded-lg bg-light-100 dark:bg-palette-900 border border-black/20 dark:border-white/20">
	{
		image ? (
			<Image
				src={images[image]()}
				alt={description}
				class="w-full h-48 md:w-36 md:h-auto md:min-h-full object-cover"
				loading="lazy"
				decoding="async"
			/>
		) : null
	}
	<div class="p-4 h-full w-full flex flex-col">
		<a class="no-underline text-sm sm:text-base transition-all duration-300 font-bold" href={url}>{name}</a>
		<div class="grow">
			<p>{description}</p>
		</div>
		<hr class="w-full h-[1.25px] my-4 bg-palette-700 dark:bg-white" />
		<div class="bottom-0 mt-auto flex flex-col gap-2">
			<div class="flex flex-wrap gap-2 justify-center md:justify-start">
				{
					tags.map((tag) => (
						<a class="px-2 py-1 rounded-sm border dark:border-white/20 border-black/20" href={`/tags/${tag}`}>
							#{tag}
						</a>
					))
				}
			</div>
			<span class="flex flex-wrap gap-2 justify-center md:justify-start text-sm opacity-70">
				{date}
				{readingTime && <span>â€¢ {readingTime}</span>}
			</span>
		</div>
	</div>
</div>
